'use strict';

var _chai = require('chai');

var _TestUtils = require('../../TestUtils');

var _TestUtils2 = _interopRequireDefault(_TestUtils);

var _ChampionEndpoint = require('../../../lib/Endpoints/ChampionEndpoint');

var _ChampionEndpoint2 = _interopRequireDefault(_ChampionEndpoint);

var _mocks = require('../../mocks');

var _mocks2 = _interopRequireDefault(_mocks);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var kaynInstance = _TestUtils2.default.kaynInstance,
    defaultConfig = _TestUtils2.default.defaultConfig;
var kayn = kaynInstance.kayn,
    REGIONS = kaynInstance.REGIONS,
    METHOD_TYPES = kaynInstance.METHOD_TYPES;


describe('ChampionEndpoint', function () {
  this.timeout(0);

  beforeEach(function () {
    this.Champion = new _ChampionEndpoint2.default(defaultConfig);
  });

  describe('.get', function () {
    it('should have the correct payload #1', function () {
      var championID = 67;

      var _Champion$get = this.Champion.get(championID),
          payload = _Champion$get.payload;

      (0, _chai.expect)(payload).to.deep.equal({
        method: 'GET',
        serviceName: 'platform',
        endpoint: 'champions/' + championID,
        query: [],
        region: ''
      });
    });
  });
});