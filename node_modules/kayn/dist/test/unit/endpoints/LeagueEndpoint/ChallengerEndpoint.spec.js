'use strict';

var _chai = require('chai');

var _TestUtils = require('../../../TestUtils');

var _TestUtils2 = _interopRequireDefault(_TestUtils);

var _ChallengerEndpoint = require('../../../../lib/Endpoints/LeagueEndpoint/ChallengerEndpoint');

var _ChallengerEndpoint2 = _interopRequireDefault(_ChallengerEndpoint);

var _mocks = require('../../../mocks');

var _mocks2 = _interopRequireDefault(_mocks);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var kaynInstance = _TestUtils2.default.kaynInstance,
    defaultConfig = _TestUtils2.default.defaultConfig;
var kayn = kaynInstance.kayn,
    REGIONS = kaynInstance.REGIONS,
    METHOD_TYPES = kaynInstance.METHOD_TYPES;


describe('ChallengerEndpoint', function () {
  this.timeout(0);

  beforeEach(function () {
    this.Challenger = new _ChallengerEndpoint2.default(defaultConfig);
  });

  describe('.list', function () {
    it('should have the correct payload #1', function () {
      var _Challenger$list = this.Challenger.list('RANKED_SOLO_5x5'),
          payload = _Challenger$list.payload;

      (0, _chai.expect)(payload).to.deep.equal({
        method: 'GET',
        serviceName: 'league',
        endpoint: 'challengerleagues/by-queue/RANKED_SOLO_5x5',
        query: [],
        region: ''
      });
    });
  });
});